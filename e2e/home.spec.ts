import {test, expect} from '@playwright/test';


var homePage = "http://localhost:3000"

var aboutPage = "http://localhost:3000/about"

var gradespage = "http://localhost:3000/grades"

test.beforeAll(async ()=> {
console.log('before tests');
})

test.afterAll(async () => {
    console.log('after tests');
})


test.describe('Head tag area', () => {
    test('Contains the head tag and its contents', async ({ page }) => {
        await page.goto(homePage);
        await expect(page).toHaveTitle('Example #1')

        const metaDescription = page.locator('meta[name="description"]');
        await expect(metaDescription).toHaveAttribute('content', "Generated by create next app");

        const linkIcon = page.locator('link[rel="icon"]');
        await expect(linkIcon).toHaveAttribute('href', "/favicon.ico");
    })
})



test.describe('Main content', () => {
    test('Should contain a header welcome to my homepahe, async ', async ({page}) => {
        await page.goto(homePage);
        await expect(page.locator('h1')).toContainText("Welcome to my Home page");
    })

    test("Should contain list to describe CRUD", async({page}) => {
        await page.goto(homePage);
        await expect(page.locator('ul > li')).toContainText(["Create", "Read", "Update", "Delete"]);
    })
})

test.describe("Linking to another page", () => {
    test('Should contain a link to about page', async ({page}) => {
        await page.goto(homePage);
        await page.click('text=About Page')
        await expect(page).toHaveURL(aboutPage);
    })



    test('Should contain a link to grade page', async ({page}) => {
        await page.goto(homePage);
        await page.click('text=Grades Page')
        await expect (page).toHaveURL(gradespage)
    })
})


test.describe("button test", async () => {
    test('this is the info component', async ({page}) => {
        await page.goto(homePage);
        await expect (page.locator('button')).toContainText("view all this info")
    })


})



test.describe("Footer tests", () => {
    test("Should contain a footer on the home page", async ({page}) => {
        await page.goto(homePage);
        await expect(page.locator('footer')).toContainText("In class example #1")
    })
})


test.describe("Check about page navigates to home page tests", () => {
    test('Should navigate', async ({page}) => {
        await page.goto(aboutPage);
        await page.click('text=Go Back')
        await expect(page).toHaveURL(homePage)
    })
})